version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ../../
      dockerfile: scripts/dev/Dockerfile.backend
    container_name: sparc-backend-dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ../../src/backend:/app/src/backend
      - ../../package.json:/app/package.json
      - ../../package-lock.json:/app/package-lock.json
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - sparc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Service
  frontend:
    build:
      context: ../../src/frontend
      dockerfile: ../../scripts/dev/Dockerfile.frontend
    container_name: sparc-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SUPABASE_URL=${SUPABASE_URL}
      - REACT_APP_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ../../src/frontend/src:/app/src
      - ../../src/frontend/public:/app/public
      - ../../src/frontend/package.json:/app/package.json
      - ../../src/frontend/package-lock.json:/app/package-lock.json
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - sparc-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: sparc-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sparc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy for development
  nginx:
    image: nginx:alpine
    container_name: sparc-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ../../config/nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - sparc-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  sparc-network:
    driver: bridge